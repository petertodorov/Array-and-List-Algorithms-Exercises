using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
class ShootListElements
{
    static void Main(string[] args)
    {
        List<int> numbers = new List<int>();
        string inputLine = Console.ReadLine();
        int lastRemoved = new int();
        string output = "";
        while (inputLine != "stop")
        {
            if (inputLine == "bang")
            {
                if (numbers.Count == 0)
                {
                    output = "nobody left to shoot! last one was {0}";
                    break;
                }
                double average = numbers.Average();
                lastRemoved = ShootElement(numbers, lastRemoved, average);
                DecrementElement(numbers);
            }
            else
            {
                int number = int.Parse(inputLine);
                numbers.Insert(0, number);
            }
            inputLine = Console.ReadLine();
        }

        if (numbers.Count>0 && output =="")
        {
            Console.WriteLine("survivors: {0}",String.Join(" ",numbers));
        }
        else if (numbers.Count== 0 && output == "")
        {
            Console.WriteLine($"you shot them all. last one was {lastRemoved}");
        }
        else
        {
            Console.WriteLine(output,lastRemoved);
        }
    }
 
    private static void DecrementElement(List<int> numbers)
    {
        for (int i = 0; i < numbers.Count; i++)
        {
            numbers[i]--;
        }
    }

    private static int ShootElement(List<int> numbers, int lastRemoved, double average)
    {
        lastRemoved = 0;
        if (numbers.Count == 1)
        {
            Console.WriteLine("shot {0}", numbers[0]);
            lastRemoved = numbers[0];
            numbers.RemoveAt(0);
            return lastRemoved;
        }
        for (int i = 0; i < numbers.Count; i++)
        {
            if (numbers[i] < average)
            {
                Console.WriteLine("shot {0}", numbers[i]);
                lastRemoved = numbers[i];
                numbers.RemoveAt(i);
                break;
            }
        }
        return lastRemoved;
    }
}


